# Copyright 2023 Midcontinent Independent System Operator, Inc.

openapi: '3.0.3'
info:
  title: Transmission Facility Ratings and Operating Limits Information Exchange (TROLIE)
  description: |
    Pursuant to FERC Order 881, Transmission Providers are required to support
    Ambient Adjusted Ratings (AARs) for most Transmission Facilities in their footprint.

    This API specification supports the information exchange necessary to
    coordinate forecasted and base facility ratings between a Transmission Provider
    and Ratings Providers.

    The Transmission Provider is assumed to be the host of this information exchange.

    A Ratings Provider is defined by this specification to be any entity that
    has pre-coordinated with the Transmission Provider hosting this information exchange
    to be the entity responsible for providing AARs on some set of Transmission Facilities
    known to the Transmission Provider. That pre-coordination is out-of-scope for
    this specification.

    Additionally, all Ratings Providers are assumed to have an `entity-id`
    and pre-defined Monitoring Set associated with the `entity-id`. A Monitoring Set
    is defined by this specification to mean a set of Transmission Facilities
    known to the Transmission Provider that may or may not have AARs. The method
    used to define a Monitoring Set is out-of-scope for this specification.

    <img src="images/TROLIE interactions.svg" alt="TROLIE Interactions" />


  version: '1.0.0-alpha.1'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
servers:
  - url: https://no-server/trolie
tags:
  - name: Operating Snapshots
    description: |
      Two snapshots are provided:
      * **Operating Ratings Forecast Snapshot** is the forecast of Transmission
        Facility ratings that is in-use by the Transmission Provider at the time
        of the request for this resource.
      * **Operating Limits Snapshot** is the set of System Operating Limits the
        Transmission Provider is operating to at the time of the request for
        this resource.
  - name: Ratings Clearinghouse
    description: |
      The Transmission Provider receives Ratings Forecasts from Ratings Providers
      during a Forecast Window and incorporates those forecasts along with other
      information like outages, overrides, and non-thermal limits to produce the
      Operating Ratings Forecast Snapshot.

      Additionally, a Ratings Provider can obtain the base ratings, i.e., the nominal
      and seasonal ratings, of all the facilities in their monitoring set.
paths:
  /ratings-forecast-snapshot:
    get:
      operationId: getRatingsForecast
      description: >
        Obtain the Ratings Forecast the Transmission Provider is currently using in Operations.
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/offset-hour-ending'
        - $ref: '#/components/parameters/forecast-length'
        - $ref: '#/components/parameters/monitoring-set-filter'
      responses:
        200:
          description: >
            The requested operating forecast snapshot is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coordinated-forecast-set'
            application/vnd.regional-rating-forecast-set.v1+json:
              schema:
                $ref: '#/components/schemas/coordinated-forecast-set'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        304:
          $ref: '#/components/responses/not-modified'
        400:
          description: >
            Malformed request. Possible reasons include `forecast-length` or
            `offset-hour-ending` being out of range as well as an invalid `monitoring-set-filter`.
          content:
            'application/*':
              schema:
                $ref: '#/components/schemas/empty'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        401:
          $ref: '#/components/responses/unauthorized'
        403:
          $ref: '#/components/responses/forbidden'
        406:
          $ref: '#/components/responses/not-acceptable'
        429:
          $ref: '#/components/responses/rate-limited'
        default:
          $ref: '#/components/responses/unexpected-error'
      security:
        - oauth2-cert-flow:
          - "read:operating-snapshot"
    head:
      operationId: getRatingsForecastHeaders
      description: >
        Use to obtain the headers that would be returned for 
        `getRatingsForecast`. Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/offset-hour-ending'
        - $ref: '#/components/parameters/forecast-length'
        - $ref: '#/components/parameters/monitoring-set-filter'
      responses:
        200:
          description: OK
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        304:
          $ref: '#/components/responses/not-modified'
        400:
          description: >
            Malformed request. Possible reasons include `forecast-length` or
            `offset-hour-ending` being out of range as well as an invalid `monitoring-set-filter`.
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        401:
          $ref: '#/components/responses/unauthorized-head'
        403:
          $ref: '#/components/responses/forbidden-head'
        406:
          $ref: '#/components/responses/not-acceptable-head'
        429:
          $ref: '#/components/responses/rate-limited-head'
        default:
          $ref: '#/components/responses/unexpected-error-head'

      security:
        - oauth2-cert-flow:
          - "read:operating-snapshot"

  /limits-snapshot:
    get:
      operationId: getLimits
      description: >
        Obtain the System Operating Limits in-use by the Transmission Provider.
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
      tags:
        - Operating Snapshots
      responses:
        200:
          description: >
            The System Operating Limits snapshot is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/effective-limit-set'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        304:
          $ref: '#/components/responses/not-modified'
        400:
          description: >
            Malformed request. Possible reasons include an invalid `monitoring-set-filter`.
          content:
            'application/*':
              schema:
                $ref: '#/components/schemas/empty'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        401:
          $ref: '#/components/responses/unauthorized'
        403:
          $ref: '#/components/responses/forbidden'
        406:
          $ref: '#/components/responses/not-acceptable'
        429:
          $ref: '#/components/responses/rate-limited'
        default:
          $ref: '#/components/responses/unexpected-error'
      security:
        - oauth2-cert-flow:
          - "read:operating-snapshot"
    head:
      operationId: getLimitsHeaders
      description: >
        Use to obtain the headers that would be returned for `getLimits`.
        Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
      responses:
        200:
          description: OK
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        304:
          $ref: "#/components/responses/not-modified"
        400:
          description: >
            Malformed request. Possible reasons include an invalid `monitoring-set-filter`.
          content:
            'application/*':
              schema:
                $ref: '#/components/schemas/empty'
        401:
          $ref: '#/components/responses/unauthorized-head'
        403:
          $ref: '#/components/responses/forbidden-head'
        406:
          $ref: '#/components/responses/not-acceptable-head'
        429:
          $ref: '#/components/responses/rate-limited-head'
        default:
          $ref: '#/components/responses/empty'
      security:
        - oauth2-cert-flow:
          - "read:operating-snapshot"
  
  /base-ratings/{monitoring-set}:
    get:
      operationId: getBaseRatings
      description: Retrieve the nominal and seasonal ratings for all facilities in the `monitoring-set`.
      tags:
        - Ratings Clearinghouse
      parameters:
        - $ref: '#/components/parameters/monitoring-set'
      responses:
        200:
          description: OK
          content:
            application/*:
              schema:
                type: object
                properties:
                  monitoring-set:
                    $ref: '#/components/schemas/entity-id'
                  ratings:
                    $ref: '#/components/schemas/recourse-ratings'
                required:
                  - monitoring-set
                  - ratings
                additionalProperties: false
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        304:
          $ref: '#/components/responses/not-modified'
        401:
          $ref: '#/components/responses/unauthorized'
        403:
          $ref: '#/components/responses/forbidden'
        406:
          $ref: '#/components/responses/not-acceptable'
        429:
          $ref: '#/components/responses/rate-limited'
        default:
          $ref: '#/components/responses/unexpected-error'
      security:
        - oauth2-cert-flow:
          - "read:monitoring-set"
  
  /recourse-ratings/{ratings-provider}:
    patch:
      operationId: updateSeasonalRatings
      description: >
        Updates the seasonal ratings for a subset of facilities for the given
        `ratings-provider`. Seasonal ratings are utilized in the recourse rating
        methodology of the Transmission Provider.
      tags:
        - Ratings Clearinghouse
      parameters:
        - $ref: '#/components/parameters/ratings-provider'
      requestBody:
        content:
          application/vnd.recourse-ratings.v1+json:
            schema:
              $ref: '#/components/schemas/recourse-ratings'
      responses:
        202:
          description: >
            The update was accepted for later processing. Updates to seasonal
            ratings may need to undergo additional validation and propagation
            to other systems.
          content:
            application/*:
              schema:
                $ref: '#/components/schemas/empty'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        401:
          $ref: '#/components/responses/unauthorized'
        403:
          $ref: '#/components/responses/forbidden'
        406:
          $ref: '#/components/responses/not-acceptable'
        415:
          $ref: '#/components/responses/unsupported-patch'
        429:
          $ref: '#/components/responses/rate-limited'
        default:
          $ref: '#/components/responses/unexpected-error'
      security:
        - oauth2-cert-flow:
          - "write:recourse-ratings"

  /forecasts/{ratings-provider}/{first-hour-ends}:
    patch:
      operationId: updateProviderForecast
      description: >
        Submit a Ratings Forecast for the given `ratings-provider`.
      tags:
        - Ratings Clearinghouse
      parameters:
        - $ref: '#/components/parameters/ratings-provider'
        - $ref: '#/components/parameters/first-hour-ends'
      requestBody:
        content:
          application/vnd.local-rating-forecast.v1+json:
            schema:
              $ref: '#/components/schemas/forecast-submission'
          application/vnd.regional-rating-forecast-set.v1+json:
            schema:
              $ref: '#/components/schemas/coordinated-forecast-set'
      responses:
        200:
          description: >
            The submitted forecast information was accepted and incorporated
            into the coordinated forecast for the forecast window beginning with
            `first-hour-ends`.
          content:
            'application/*':
              schema:
                $ref: '#/components/schemas/forecast-submission-response'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        400:
          description: Malformed request. Check the payload schema.
          content:
            'application/*':
              schema:
                $ref: '#/components/schemas/validation-message'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        403:
          $ref: '#/components/responses/forbidden'
        406:
          $ref: '#/components/responses/not-acceptable'
        409:
          $ref: '#/components/responses/forecast-not-yet-available'
        410:
          $ref: '#/components/responses/archived'
        413:
          $ref: '#/components/responses/payload-too-large'
        415:
          $ref: '#/components/responses/unsupported-patch'
        422:
          $ref: '#/components/responses/invalid-forecast'
        429:
          $ref: '#/components/responses/rate-limited'
        default:
          $ref: '#/components/responses/unexpected-error'
      security:
        - oauth2-cert-flow:
          - "write:forecasts"

components:
  parameters:
    first-hour-ends:
      name: first-hour-ends
      description: >
        Uniquely identifies the desired forecast by specifying the first forecasted hour. The hour is nominated by
        specifying the exact time when the hour ends.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/hour-ending'
    ratings-provider:
      name: ratings-provider
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/entity-id'
    offset-hour-ending:
      name: offset-hour-ending
      description: >
        Rather than return the entire forecast from the beginning, i.e., the next
        operating hour, instead return a subset of the forecast starting with
        the hour ending at `offset-hour-ending`.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/hour-ending'
    forecast-length:
      name: forecast-length
      description: Specifies the number of sequential forecasted hours to return.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/forecast-length'
    monitoring-set-filter:
      name: monitoring-set
      description: >
        Only return ratings for facilities of the `monitoring-set` associated
        with the given NERC id.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/entity-id'
    monitoring-set:
      name: monitoring-set
      description: >
        A collection of Transmission Facilities associated with a Ratings Provider.
        The Ratings Provider determines which facilities are in the collection,
        but it must include every facility associated with a Ratings Requirement
        assigned to the Ratings Provider. A Monitoring Set is uniquely identified
        among all other Monitoring Sets by the entity id of the Ratings Provider,
        usually their NERC id. The ratings and other associated information for
        the facilities in the Monitoring Set can be obtained by the Ratings Provider
        by requesting the appropriate object from TROLIE using their entity id.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/entity-id'
  schemas:
    effective-limit-set:
      type: array
      maxItems: 50000
      items:
        allOf:
          - $ref: '#/components/schemas/facility-info'
          - $ref: '#/components/schemas/last-known-effective-limits'
    last-known-effective-limits:
      type: object
      properties:
        origin-id: # e.g. EMS case id
          $ref: '#/components/schemas/origin-id'
        updated-time:
          $ref: '#/components/schemas/timestamp'
        normal:
          $ref: '#/components/schemas/apparent-power-rating'
        emergency:
          $ref: '#/components/schemas/apparent-power-rating'
        load-shed:
          $ref: '#/components/schemas/apparent-power-rating'
    facility-info:
      type: object
      properties:
        facility-type:
          $ref: '#/components/schemas/facility-types'
        facility-design-kilovoltage:
          $ref: '#/components/schemas/facility-kilovoltage'
        facility-names:
          $ref: '#/components/schemas/facility-names'

    recourse-ratings:
      type: array
      maxItems: 1000
      items:
        allOf:
          - $ref: '#/components/schemas/facility-info'
          - $ref: '#/components/schemas/last-known-effective-limits'

    coordinated-forecast-set:
      type: object
      additionalProperties: false
      properties:
        provenance:
          $ref: '#/components/schemas/provenance'
        forecast-sources:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/coordinated-source'
        forecasts:
          type: array
          minItems: 0
          maxItems: 50000 # MAX_COORDINATED_FACILITIES
          items:
            $ref: '#/components/schemas/coordinated-forecast'
      required:
        - provenance
        - forecast-sources
        - forecasts

    forecast-submission:
      type: object
      additionalProperties: false
      properties:
        forecast-provider:
          $ref: '#/components/schemas/entity-id'
        rating-forecasts:
          type: array
          maxItems: 3000 # MAX_FACILITY_FORECASTS
          items:
            $ref: '#/components/schemas/facility-rating-forecast'
      required:
        - forecast-provider
        - rating-forecasts

    forecast-status:
      type: object
      additionalProperties: false
      properties:
        forecast-provider:
          $ref: '#/components/schemas/entity-id'
        incomplete-facility-count:
          description: The number of facilities for this provider whose ratings requirement has not been met in this forecast window.
          type: integer
          format: uint16
          minimum: 0
          maximum: 3000 # MAX_FACILITY_FORECASTS
        incomplete-facilities:
          type: array
          maxItems: 50 # MAX_FACILITY_FORECASTS_ERRORS
          items:
            $ref: '#/components/schemas/incomplete-facility'

    forecast-submission-response:
      allOf:
        - $ref: '#/components/schemas/forecast-status'
        - type: object
          properties:
            invalid-forecast-count:
              type: integer
              format: uint16
              minimum: 0
              maximum: 3000 # MAX_FACILITY_FORECASTS
            invalid-forecast-submissions:
              type: array
              maxItems: 50 # MAX_FACILITY_FORECASTS_ERRORS
              items:
                $ref: '#/components/schemas/validation-message'
      additionalProperties: false
      required:
        - forecast-provider
        - invalid-forecast-count
        - invalid-forecast-submissions
        - incomplete-facility-count
        - incomplete-facilities
    incomplete-facility:
      type: object
      additionalProperties: false
      properties:
        data-owner:
          $ref: '#/components/schemas/entity-id'
        facility-names:
          $ref: '#/components/schemas/facility-names'
      required:
        - data-owner
        - facility-names

    validation-message:
      type: string
      pattern: '^(.){1,500}$'
      maxLength: 500

    facility-rating-forecast:
      allOf:
        - $ref: '#/components/schemas/facility-forecast'
        - $ref: '#/components/schemas/sequential-hourly-rating-forecast'

    facility-forecast:
      type: object
      #additionalProperties: false
      properties:
        facility-type:
          $ref: '#/components/schemas/facility-types'
        facility-design-kilovoltage:
          $ref: '#/components/schemas/facility-kilovoltage'
        data-owner:
          # The transmission owner with a ratings requirement
          $ref: '#/components/schemas/entity-id'
        provenance:
          $ref: '#/components/schemas/provenance'
        facility-names:
          $ref: '#/components/schemas/facility-names'
      required:
        - facility-type
        - facility-design-kilovoltage
        - data-owner
        - provenance
        - facility-names
    coordinated-forecast:
      type: object
      additionalProperties: false
      properties:
        facility-type:
          $ref: '#/components/schemas/facility-types'
        facility-design-kilovoltage:
          $ref: '#/components/schemas/facility-kilovoltage'
        facility-names:
          $ref: '#/components/schemas/facility-names'
        sequential-hourly-forecast:
          $ref: '#/components/schemas/coordinated-sequential-hourly-forecast'
      required:
        - facility-type
        - facility-design-kilovoltage
        - facility-names
        - sequential-hourly-forecast
    sequential-hourly-rating-forecast:
      type: object
      #additionalProperties: false
      properties:
        first-hour-ends:
          $ref: '#/components/schemas/hour-ending'
        length:
          $ref: '#/components/schemas/forecast-length'
        hourly-sequence:
          type: array
          uniqueItems: true
          maxItems: 240 # MAX_HOURS
          items:
            $ref: '#/components/schemas/computed-rating'
      required:
        - first-hour-ends
        - length
        - hourly-sequence
    temperature-fahrenheit:
      type: integer
      format: int16
      maximum: 200
      minimum: -100
    coordinated-sequential-hourly-forecast:
      type: object
      additionalProperties: false
      properties:
        first-hour-ends:
          $ref: '#/components/schemas/hour-ending'
        length:
          $ref: '#/components/schemas/forecast-length'
        hourly-sequence:
          type: array
          uniqueItems: true
          maxItems: 240 # MAX_HOURS
          items:
            $ref: '#/components/schemas/coordinated-rating'
      required:
        - first-hour-ends
        - length
        - hourly-sequence

    computed-rating:
      type: object
      additionalProperties: false
      properties:
        hour-ending:
          $ref: '#/components/schemas/hour-ending'
        normal:
          $ref: '#/components/schemas/computed-apparent-power-rating'
        emergency:
          $ref: '#/components/schemas/computed-apparent-power-rating'
        load-shed:
          $ref: '#/components/schemas/computed-apparent-power-rating'
        temperature-fahrenheit:
          $ref: '#/components/schemas/temperature-fahrenheit'
      required:
        - hour-ending
        - normal
        - emergency
        - load-shed

    coordinated-rating:
      type: object
      additionalProperties: false
      properties:
        hour-ending:
          $ref: '#/components/schemas/hour-ending'
        normal:
          $ref: '#/components/schemas/coordinated-apparent-power-rating'
        emergency:
          $ref: '#/components/schemas/coordinated-apparent-power-rating'
        load-shed:
          $ref: '#/components/schemas/coordinated-apparent-power-rating'
      required:
        - hour-ending
        - normal
        - emergency
        - load-shed

    apparent-power-rating:
      type: object
      additionalProperties: false
      properties:
        mva:
          description: >
            The apparent power rating of the facility in megavolt-amperes. The ampacity of the facility should be
            determined by assuming 1 per unit of the `facility-design-kilovoltage`.
          type: integer
          format: uint16
          minimum: 1 # MIN_MVA
          maximum: 10000 # MAX_MVA
        override-reason:
          type: string
          description: >
            Presence of this field implies out-of-methodology, e.g., an operator override.
          maxLength: 100
          pattern: ^(.){0,100}$
      required:
        - mva
    computed-apparent-power-rating:
      allOf:
        - $ref: '#/components/schemas/apparent-power-rating'
        - type: object
          properties:
            limiting-element:
              $ref: '#/components/schemas/generic-identifier'
            alternate-topology-ratings:
              type: array
              uniqueItems: true
              maxItems: 10
              items:
                $ref: '#/components/schemas/alternate-topology-rating'

    coordinated-apparent-power-rating:
      allOf:
        - $ref: '#/components/schemas/apparent-power-rating'
        - type: object
          properties:
            source:
              $ref: '#/components/schemas/entity-id'
            alternate-topology-ratings:
              type: array
              uniqueItems: true
              maxItems: 10
              items:
                $ref: '#/components/schemas/alternate-topology-rating'
          required:
          - source
    alternate-topology-rating:
      allOf:
        - $ref: '#/components/schemas/apparent-power-rating'
        - type: object
          properties:
            source:
              $ref: '#/components/schemas/entity-id'
            condition-id:
              $ref: '#/components/schemas/condition-id'
      required:
        - source
        - condition-id
    condition-id:
      description: An identifier of the topology condition associated with this forecasted AAR.
      type: string
      maxLength: 100
      pattern: ^(.){0,100}$
    facility-types:
      type: string
      enum:
        - ACLine
        - ACTransformer
    facility-kilovoltage:
      description: The design voltage of the facility in kilovolts.
      type: integer
      format: uint16
      minimum: 1 # MIN_KV
      maximum: 2000 # MAX_KV
    facility-names:
      description: >
        The Forecast Provider **must** include the `facility-name` used in their operations and **should** provide
        any other `facility-name` they believe to be in use by other transmission owners and reliability coordinators.
      type: array
      minItems: 1
      maxItems: 10 # MAX_NAMES
      items:
        $ref: '#/components/schemas/facility-name'
    facility-name:
      type: object
      additionalProperties: false
      properties:
        name:
          description: A unique name given to the facility by `authority`
          type: string
          maxLength: 50
          pattern: '^(.){3,50}$'
        authority:
          $ref: '#/components/schemas/entity-id'
        mrid:
          $ref: '#/components/schemas/mrid'
      required:
        - name
        - authority

    generic-identifier:
      type: string
      maxLength: 100
      pattern: ^(.){0,100}$
    hash:
      type: string
      description: >
        A hex encoded hash value as produced by, e.g., SHA512.
      maxLength: 256
      pattern: '^[A-Fa-f0-9\-]{6,256}$'
    mrid:
      type: string
      description: >
        An optional, globally unique identifier for the facility as used by
        `authority`. In all cases, comparisons for uniqueness should be case
        invariant. The pattern is included for security purposes and does
        not attempt to validate the identifier format; it allows for, e.g.,
        RFC 4122 style identifiers that are non-conforming.
      maxLength: 50
      pattern: '^(?:(^(urn:uuid:)?[A-Fa-f0-9\-]{6,50}$)|(^\S+$))$'
    coordinated-source:
      allOf:
        - $ref: '#/components/schemas/provenance' 
        - type: object
          properties:
            received-time:
              $ref: '#/components/schemas/timestamp'
          required:
            - received-time
    provenance:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/entity-id'
        created-time:
          $ref: '#/components/schemas/timestamp'
        origin-id:
          $ref: '#/components/schemas/origin-id'
      required:
        - provider
        - created-time
        - origin-id
      additionalProperties: false

    origin-id:
      description: >
        Opaque correlation identifier assigned by the originating system.
      type: string
      maxLength: 50
      pattern: '^(.){1,50}$'
    entity-id:
      description: Usually the NERC id of the entity.
      type: string
      maxLength: 10
      pattern: ^[A-Z]{3,10}$
      example: 'MISO'
    hour-ending:
      description: |
        RFC 3339 date-time string with *no fractional seconds component* that designates the hour that ends at the specified time. The hour must align with
        an operational hour of the Transmission Provider. Thus, if the Transmission Provider is operating in EST, these are
        valid and equivalent values:
        * 2023-01-01T06:00Z
        * 2023-01-01T01:00-5:00
        * 2023-01-01T00:00-6:00
        * 2023-01-01T11:30+5:30

        However, these would *not* be valid:
        * 2023-01-01T06:01Z
        * 2023-01-01T01:02-05:00
        * 2023-01-01T10:00+5:30
        The server should uniformly represent date-times in the operational time zone of the Transmission Provider.
      type: string
      format: date-time
      maxLength: 25
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
      example: '2025-01-01T03:00:00-05:00'
    timestamp:
      description: RFC 3339 date-time string with a maximum of 10 digits in the fractional seconds component, i.e., nanosecond precision.
      type: string
      format: date-time
      maxLength: 35
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]{1,10})?([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
    forecast-length:
      type: integer
      format: uint16
      minimum: 0
      maximum: 240 # MAX_HOURS
      default: 240 # MAX_HOURS
    empty:
      description: Intended to proactively avoid information disclosure
      type: string
      nullable: true
      maxLength: 0
      pattern: ^$

  responses:
    unauthorized-head:
      description: Unauthorized
      headers:
        WWW-Authenticate:
          schema:
            type: string
            pattern: ^Mutual.*
            maxLength: 100
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unauthorized:
      description: Unauthorized
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        WWW-Authenticate:
          schema:
            type: string
            pattern: ^Mutual.*
            maxLength: 100
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forbidden-head:
      description: Access denied
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forbidden:
      description: Access denied
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

    forecast-will-never-exist:
      description: The requested forecast does not exist and will never exist.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forecast-not-yet-available:
      description: The forecasting window is not open for the nominated `first-hour-ends`.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    rate-limited-head:
      description: Too many requests (rate limiting)
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    rate-limited:
      description: Too many requests (rate limiting)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    archived:
      description: Gone. The requested forecast may be available in ratings archive.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        Location:
          schema:
            description: The URL for the archived forecast
            type: string
            pattern: ^http.*
            maxLength: 2000

    not-acceptable-head:
      description: Not acceptable (content negotiation)
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    not-acceptable:
      description: Not acceptable (content negotiation)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    invalid-forecast:
      description: Unprocessable entity (invalid forecast)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/validation-message'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unsupported-patch:
      description: >
        Unsupported media type. This can occur if an entity submits a forecast
        payload other than what is expected, e.g., if a Reliability Coordinator
        submits `application/vnd.local-rating-forecast` instead of
        `application/vnd.regional-rating-forecast`.

      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        Accept-Patch:
          description: The acceptable media types.
          schema:
            type: string
            pattern: ^application/vnd.*
            maxLength: 100
    payload-too-large:
      description: Payload too large
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unexpected-error-head:
      description: An unexpected error occurred
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unexpected-error:
      description: An unexpected error occurred
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    not-modified:
      description: Not modified
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        ETag:
          $ref: '#/components/headers/ETag'
    empty:
      description: An empty response
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

  headers:
    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
    ETag:
      description: >
        An opaque, unique identifier for a specific version of a resource. The
        modeled resource state is what is versioned, not the content of any
        particular representation. The server MUST use a strong validator so that
        the same ETag is returned regardless of the media type of the representation.
      schema:
        additionalProperties: false
        anyOf:
          - $ref: '#/components/schemas/hash'
          - $ref: '#/components/schemas/origin-id'

  securitySchemes:
    oauth2-cert-flow:
      type: oauth2
      flows:
        clientCredentials:
          #The linter errors on the authorizationUrl, incorrectly?
          #authorizationUrl: https://example.com/oauth2
          tokenUrl: https://no-server/oauth2
          scopes:
            "write:forecasts": "Update Ratings Provider ratings forecasts"
            "read:monitoring-set": "Read ratings associated with a particular monitoring set"
            "write:recourse-ratings": "Update Ratings Provider recourse ratings"
            "read:operating-snapshot": "Read the ratings and limits snapshots in-use by the clearinghouse provider"

security:
  - oauth2-cert-flow: []