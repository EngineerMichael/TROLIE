# Copyright 2023 Midcontinent Independent System Operator, Inc.

openapi: '3.0.3'
info:
  title: Transmission Facility Ratings and Operating Limits Information Exchange (TROLIE)
  description: |
    Pursuant to FERC Order 881, Transmission Providers are required to support
    Ambient Adjusted Ratings (AARs) for most Transmission Facilities in their footprint.  
    
    In this context, Transmission Providers refers roughly to the FERC definition of Transmission 
    Provider as any public utility that owns, operates, or controls facilities used for the
    transmission of electric energy in interstate commerce.  This could be said to apply to any entity that operates the transmission grid, including ISOs.  
    
    For the purpose of this API, Transmission Provider may be assumed to be more generic- it is 
    really any entity that can recieve AARs.  

    This API specification supports the information exchange necessary to
    coordinate forecasted and base facility ratings between a Transmission Provider
    and Ratings Providers. 

    The Transmission Provider is assumed to be the host of this information exchange.

    A Ratings Provider is defined by this specification to be any entity that
    has pre-coordinated with the Transmission Provider hosting this information exchange
    to be the entity responsible for providing AARs on some set of Transmission Facilities
    known to the Transmission Provider. That pre-coordination is out-of-scope for
    this specification.

    The language of this API makes a strict distinction between the terms rating and limit.  
    A limit is a validated value that is actively used to make operational decisions on the power grid.  
    This could be limits used by the EMS or real-time market in real-time, or it could be forecast limits 
    used by look-ahead processes such as EMS study applications or the day-ahead market. 
    A rating, in contrast, is a calculated value from some process that is input to TROLIE 
    (and by extension operating power systems at large) and may be selected for use as a 
    limit after validation and dependent on operating conditions, timeframe and the operational 
    decisions being made.  Seasonal ratings, forecast rating submittals, and real-time rating submittals are all examples of ratings.  

    <img src="images/TROLIE interactions.svg" alt="TROLIE Interactions" />


  version: '1.0.0-alpha.1'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
servers:
  - url: https://no-server/trolie
tags:
  - name: Operating Snapshots
    description: |
      Two snapshots are provided:
      * **Operating Limits Forecast Snapshot** is the forecast of Transmission
        Facility ratings that is in-use by the Transmission Provider at the time
        of the request for this resource.  These are actively used for look-ahead operational decisions, such as the
        day-ahead market, in addition to their role as recourse limits if real-time ratings
        submissions are missing.  
      * **Operating Limits Real-Time Snapshot** is the set of System Operating Limits the
        Transmission Provider is operating to at the time of the request for
        this resource.  
  - name: Recourse Rating Snapshots
    description: |
      While not typically used directly in operational decisions, recourse ratings are provided for two purposes:
      1.  They are used when applicable forecast ratings are not available.  
      2.  They may be used in future-looking studies that look out (potentially far) beyond the time 
          window where forecast ratings are available.  
      A snapshot is provided of the resource ratings configured by the system, as well as their relationship to upcoming seasons.  

  - name: Rating Submissions
    description: |
      Ratings Providers may submit ratings for three separate time horizons:
      * **Forecast Ratings** are at minimum hourly forecasts of ratings for a particular segment.  
      * **Real-Time Ratings** are provided for current operating conditions.  Ratings provided in this manner
        are an alternative for segments where ICCP communications are not available.  
      * **Seasonal Recourse Ratings** are recourse ratings for when applicable forecast ratings are not available.  
        This includes ratings for scheduled calendar seasons, as well as to rating sets that apply in special named 
        scenarios defined by the Transmission Provider, such as an extreme winter day.  

  - name: Monitoring Sets
    description: | 
      The set of network elements      
  - name: Reference Data
    description: | 
      The set of network elements   
paths:
  /limits/forecast-snapshot:
    get:
      operationId: getLimitsForecastSnapshot
      description: >
        Obtain the Limits Forecast the Transmission Provider is currently using in Operations, 
        relative to the current time.  
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/forecast-length'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'        
      responses: &forecastSnapshotReadResponses
        200: 
          description: >
            The requested operating forecast snapshot is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forecast-limit-set'
            application/vnd.trolie.forecast-limit-set.v1+json:
              schema:
                $ref: '#/components/schemas/forecast-limit-set'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'
            ETag:
              $ref: '#/components/headers/ETag'
        304: &common304
          $ref: '#/components/responses/not-modified'
        400: &query400
          description: >
            Malformed request, based on misuse of filters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation-messages'
            application/vnd.trolie.validation-messages.v1+json:
              schema:
                $ref: '#/components/schemas/validation-messages'
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
        401: &common401
          $ref: '#/components/responses/unauthorized'
        403: &common403
          $ref: '#/components/responses/forbidden'
        406: &common406
          $ref: '#/components/responses/not-acceptable'
        429: &common429
          $ref: '#/components/responses/rate-limited'
        default: &commonDefaultErr
          $ref: '#/components/responses/unexpected-error'
      security: &snapshotReadSecurity
        - oauth2-cert-flow:
          - "read:operating-snapshot"
    head:
      operationId: getLimitsForecastSnapshot
      description: >
        Use to obtain the headers that would be returned for 
        `getLimitsForecastSnapshot`. Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/offset-period-start'
        - $ref: '#/components/parameters/forecast-length'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'        
      responses: &headResponses
        200: 
          description: OK
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            ETag:
              $ref: '#/components/headers/ETag'
        304: *common304
        400: *query400
        401: *common401
        403: *common403
        406: *common406
        429: *common429
        default: *commonDefaultErr

      security: *snapshotReadSecurity

  /limits/forecast-snapshot/period/{period-start}:
    get:
      operationId: getLimitsForecastByPeriod
      description: >
        Obtain the Limits Forecast the Transmission Provider is currently using in Operations, narrowed in scope
        for a particular period.  
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/period-start'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units' 
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                  
      responses: *forecastSnapshotReadResponses
    head:
      operationId: getLimitsForecastHeadersByPeriod
      description: >
        Use to obtain the headers that would be returned for 
        `getLimitsForecastByPeriodId`. Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/period-start'
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'       
      responses: *headResponses

      security: *snapshotReadSecurity


  /limits/realtime-snapshot:
    get:
      operationId: getRealTimeLimits
      description: >
        Obtain the System Operating Limits in-use by the Transmission Provider.
        Clients SHOULD perform Conditional `GET` using the `If-None-Match` header
        and the `ETag` of a previous `GET` response.
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units' 
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'                    
      tags:
        - Operating Snapshots
      responses:
        200:
          description: >
            The System Operating Limits snapshot is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/realtime-limit-set'
            application/vnd.trolie.realtime-limit-set.v1+json:
              schema:
                $ref: '#/components/schemas/realtime-limit-set'                
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        304: *common304
        400: *query400
        401: *common401
        403: *common403
        406: *common406
        429: *common429
        default: *commonDefaultErr
      security: *snapshotReadSecurity
    head:
      operationId: getRealTimeLimitsHeaders
      description: >
        Use to obtain the headers that would be returned for `getRealTimeLimits`.
        Useful for cache invalidation.
      tags:
        - Operating Snapshots
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'         
      responses: *headResponses
      security: *snapshotReadSecurity
  
  /recourse-ratings/snapshot:
    get:
      operationId: getResourceRatingsSnapshot
      description: Retrieve the nominal and seasonal ratings for all facilities in the `monitoring-set`.
      tags:
        - Recourse Rating Snapshots
      parameters:
        - $ref: '#/components/parameters/monitoring-set-filter'
        - $ref: '#/components/parameters/naming-scheme'
        - $ref: '#/components/parameters/limit-units'        
        - $ref: '#/components/parameters/max-records'
        - $ref: '#/components/parameters/record-offset'              
      responses:
        200:
          description: OK
          content:
            application/*:
              schema:
                type: object
                properties:
                  monitoring-set:
                    $ref: '#/components/schemas/entity-id'
                  ratings:
                    $ref: '#/components/schemas/recourse-ratings'
                required:
                  - monitoring-set
                  - ratings
                additionalProperties: false
          headers:
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X-Rate-Limit-Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X-Rate-Limit-Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X-Rate-Limit-Reset'
            X-TROLIE-Limit-Units:
              $ref: '#/components/headers/X-TROLIE-Limit-Units'
            X-TROLIE-Naming-Scheme:
              $ref: '#/components/headers/X-TROLIE-Naming-Scheme'              
            ETag:
              $ref: '#/components/headers/ETag'
        304: *common304
        400: *query400
        401: *common401
        403: *common403
        406: *common406
        429: *common429
        default: *commonDefaultErr
      security:
        - oauth2-cert-flow:
          - "read:recourse-ratings"


components:
  parameters:
    first-hour-ends:
      name: first-hour-ends
      description: >
        Uniquely identifies the desired forecast by specifying the first forecasted hour. The hour is nominated by
        specifying the exact time when the hour ends.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/hour-ending'
    ratings-provider:
      name: ratings-provider
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/entity-id'
    period-start:
      name: period-start
      description: >
        Defines the start of an applicable operating period.  
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/period-start'  
    max-records:
      name: max-records
      description: >
        Optionally specify a maximum number of records to return in a query operation.  Allows for paged query results.  
      in: query
      required: false
      schema: 
        type: integer
        format: uint16
    record-offset:
      name: record-offset
      description: >
        Specify an offset for the records returned in a query operation.  Along with max-records, allows for paged query results.  
      in: query
      required: false
      schema:
        type: integer

    offset-period-start:
      name: offset-period-start
      description: >
        Rather than return the entire forecast from the beginning, i.e., the next
        operating period, instead return a subset of the forecast starting with
        the period starting at `offset-period-start`.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/period-start'
    offset-hour-ending:
      name: offset-hour-ending
      description: >
        Rather than return the entire forecast from the beginning, i.e., the next
        operating hour, instead return a subset of the forecast starting with
        the hour ending at `offset-hour-ending`.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/hour-ending'
    forecast-length:
      name: forecast-length
      description: Specifies the number of sequential forecasted hours to return.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/forecast-length'
    monitoring-set-filter:
      name: monitoring-set
      description: >
        Only return ratings for facilities of the `monitoring-set` associated
        with the given NERC id.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/entity-id'
    monitoring-set:
      name: monitoring-set
      description: >
        A collection of Transmission Facilities associated with a Ratings Provider.
        The Ratings Provider determines which facilities are in the collection,
        but it must include every facility associated with a Ratings Requirement
        assigned to the Ratings Provider. A Monitoring Set is uniquely identified
        among all other Monitoring Sets by the entity id of the Ratings Provider,
        usually their NERC id. The ratings and other associated information for
        the facilities in the Monitoring Set can be obtained by the Ratings Provider
        by requesting the appropriate object from TROLIE using their entity id.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/entity-id'

    naming-scheme:
      name: X-TROLIE-Naming-Scheme
      description: |
        Indicates the naming scheme used by this operation.  The names of elements and segments
        will vary depending on their use.  CIM Master Resource Identifiers (mRIDs) may be used, as well
        as names used by the EMS or other systems.  The list of naming schemes supported, as well as the current default, 
        is a function of the TROLIE implementation.  All names of all elements are available in the getNetworkSegments and 
        getNetworkElements operations.  The list of all naming conventions and the configured default is available in the 
        getNetworkNamingConventions operation.        
      in: header
      required: false
      schema:
        type: string

    limit-units:
      name: X-TROLIE-Limit-Units
      description: |
        By default, all limits and ratings are assumed to be in megavolt-amperes (MVA).  However, TROLIE implementations _may_ support 
        alternative units, for both submittal and query, under the following circumstances:

        * Current (amps) may be used if the given segment or element has a nominal voltage configured in the model.  
          Conversion from/to MVA will be done assuming this nominal voltage.  Submittals in amps for segments without 
          a nominal voltage in amps will return null, and submittals in amps will not be allowed for such segments.  
        * A combination of actual power in megawatts (MW) and an assumed power factor (PF) in MW/MVA.  The MW and PF pairs must be offered together
          in submittals.  Queries for this form will return null for ratings/limits that were not originally submitted in this form.  

        The ability to negotiate limit units in this way is an optional feature of the TROLIE implementation. 
      in: header
      required: false
      schema:
        $ref: '#/components/schemas/limit-units'

  schemas:
    hal-link:
      type: object
      description: Link object in HAL, using a subset of what is defined in https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-08
      properties:
        href:
          type: string
          format: uri
        templated:
          type: boolean
        type:
          type: string
        name: 
          type: string
        deprecation:
          type: boolean
      required:
        - href
    
    hal-links-block:
      type: object 
      description: Common components of a HAL links block, as described in https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-08
      properties:
        self: 
          $ref: '#/components/schemas/hal-link'
        curies: 
          type: array
          items:
            $ref: '#/components/schemas/hal-link'

    paged-links-block:
      allOf:
      - $ref: '#/components/schemas/hal-links-block'
      - type: object 
        description: Extends the HAL Links block with some additional links for paging.  
        properties:               
          next: 
            $ref: '#/components/schemas/hal-link'
          previous: 
            $ref: '#/components/schemas/hal-link'  

    paged-resource:
      type: object
      description: |
        Common resource definition for paged resources.  Assumes the resource content is included as an
        array in an _embedded block, and a _links section is also declared separately containing any useful references. 
      properties:
        _links: 
          $ref: '#/components/schemas/paged-links-block'      
        total-count:
          description: the total count returned by the query.  
          type: integer
          format: uint16
        offset:
          description: the offset from 0 if this query is beyond the first page.  
          type: integer 
          format: uint16
    
    limit-value-set: 
      type: array
      description: |
        A set of general limit or rating values, each mapped to the various limit bands defined by the Transmission Provider's 
        operating manual.  This typically consists of a "normal" limit, as well as limits for various levels of emergency conditions
        (typically 2-4) defined in the operations manual.  The list of supported limit types may be fetched from getSupportedLimitTypes.  
        The value of the limits are in units as defined by the X-TROLIE-Limit-Units header.  
      items:
        allOf:
        - type: object
          properties: 
            type: 
              $ref: '#/components/schemas/limit-type'
        - oneOf:
          - $ref: '#/components/schemas/apparent-power-value'
          - $ref: '#/components/schemas/current-value'
          - $ref: '#/components/schemas/actual-power-and-factor-value'
            
    
    apparent-power-value:
      type: object
      description: Representation of a limit in megavolt-amperes.  This is the recommended default for limits in TROLIE  
      properties:
        mva:
          type: number
          format: float
          minimum: 1 # MIN_MVA
          maximum: 10000 # MAX_MVA          

    current-value:
      type: object
      description: Representation of a limit in amps.  Assumes that TROLIE has a nominal voltage in its model.  
      properties:
        amps:
          type: number
          format: float
          minimum: 1 
          maximum: 100000 

    actual-power-and-factor-value:
      type: object
      description: Representation of a limit using a combination of actual power in MW and an assumed power factor in MVA/MW
      properties:
        mw:
          type: number
          format: float
          minimum: 1 
          maximum: 10000   
        pf:
          type: number
          format: float
          minimum: 0
          maximum: 1                                   


    realtime-limit-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        additionalProperties: false
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/realtime-limit-item'

    realtime-limit-item:
      type: object
      properties:
        element-id: 
          $ref: '#/components/schemas/modeled-object-identifier'
        updated-time:
          $ref: '#/components/schemas/timestamp'
        values:
          $ref: '#/components/schemas/limit-value-set'


    last-known-effective-limits:
      type: object
      properties:
        origin-id: # e.g. EMS case id
          $ref: '#/components/schemas/origin-id'
        updated-time:
          $ref: '#/components/schemas/timestamp'
        normal:
          $ref: '#/components/schemas/apparent-power-rating'
        emergency:
          $ref: '#/components/schemas/apparent-power-rating'
        load-shed:
          $ref: '#/components/schemas/apparent-power-rating'
    facility-info:
      type: object
      properties:
        facility-type:
          $ref: '#/components/schemas/facility-types'
        facility-design-kilovoltage:
          $ref: '#/components/schemas/facility-kilovoltage'
        facility-names:
          $ref: '#/components/schemas/facility-names'

    recourse-ratings:
      type: array
      maxItems: 1000
      items:
        allOf:
          - $ref: '#/components/schemas/facility-info'
          - $ref: '#/components/schemas/last-known-effective-limits'

    forecast-limit-set:
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        additionalProperties: false
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/forecast-limit-item'

    forecast-limit-item:
      type: object 
      additionalProperties: false
      properties:
        _links: 
          allOf:
          - $ref: '#/components/schemas/hal-links-block'
          - type: object
            properties:
              provenant-submissions:
                type: array
                items: 
                  $ref: "#/components/schemas/hal-link"      
        element-id: 
          $ref: '#/components/schemas/modeled-object-identifier'
        periods:
          type: array
          items:
            $ref: '#/components/schemas/forecast-limit-period'
          
    
    forecast-limit-period:
      type: object
      additionalProperties: false
      properties: 
        period-start:
          $ref: '#/components/schemas/period-start'
        updated-time:
          $ref: '#/components/schemas/timestamp'
        values:
          $ref: '#/components/schemas/limit-value-set'
        
    recourse-rating-snapshot: 
      allOf:
      - $ref: '#/components/schemas/paged-resource'
      - type: object
        additionalProperties: false
        properties:
          _embedded:
            type: object
            properties:
              forecasts:
                type: array
                minItems: 0
                maxItems: 50000 
                items:
                  $ref: '#/components/schemas/recourse-rating-snapshot-item'     

    recourse-rating-snapshot-item:
      type: object
      additionalProperties: false
      properties:
        _links:
          allOf:
          - $ref: '#/components/schemas/hal-links-block' 
        element: 
          $ref: '#/components/schemas/hal-link'
        ratings:
          type: array 
          items:
            $ref: '#/components/schemas/recourse-rating-snapshot-value'
          maxItems: 100
          minItems: 0

    recourse-rating-snapshot-value:
      type: object
      additionalProperties: false
      properties:
        season-instance: 
          $ref: '#/components/schemas/hal-link'
        effective-date:
          description: The effective date of the season, if applicable, is inherited from the season instance.  
        values:
          $ref: '#/components/schemas/limit-value-set'
        



    forecast-submission:
      type: object
      additionalProperties: false
      properties:
        forecast-provider:
          $ref: '#/components/schemas/entity-id'
        rating-forecasts:
          type: array
          maxItems: 3000 # MAX_FACILITY_FORECASTS
          items:
            $ref: '#/components/schemas/facility-rating-forecast'
      required:
        - forecast-provider
        - rating-forecasts

    forecast-status:
      type: object
      additionalProperties: false
      properties:
        forecast-provider:
          $ref: '#/components/schemas/entity-id'
        incomplete-facility-count:
          description: The number of facilities for this provider whose ratings requirement has not been met in this forecast window.
          type: integer
          format: uint16
          minimum: 0
          maximum: 3000 # MAX_FACILITY_FORECASTS
        incomplete-facilities:
          type: array
          maxItems: 50 # MAX_FACILITY_FORECASTS_ERRORS
          items:
            $ref: '#/components/schemas/incomplete-facility'

    forecast-submission-response:
      allOf:
        - $ref: '#/components/schemas/forecast-status'
        - type: object
          properties:
            invalid-forecast-count:
              type: integer
              format: uint16
              minimum: 0
              maximum: 3000 # MAX_FACILITY_FORECASTS
            invalid-forecast-submissions:
              type: array
              maxItems: 50 # MAX_FACILITY_FORECASTS_ERRORS
              items:
                $ref: '#/components/schemas/validation-message'
      additionalProperties: false
      required:
        - forecast-provider
        - invalid-forecast-count
        - invalid-forecast-submissions
        - incomplete-facility-count
        - incomplete-facilities
    incomplete-facility:
      type: object
      additionalProperties: false
      properties:
        data-owner:
          $ref: '#/components/schemas/entity-id'
        facility-names:
          $ref: '#/components/schemas/facility-names'
      required:
        - data-owner
        - facility-names

    validation-messages:
      type: array
      items: 
        $ref: '#/components/schemas/validation-message'


    validation-message:
      type: object
      additionalProperties: false
      properties:
        level:
          type: string
          enum: 
          - warning
          - error
        message:
          type: string
          pattern: '^(.){1,500}$'
          maxLength: 500

    

    facility-rating-forecast:
      allOf:
        - $ref: '#/components/schemas/facility-forecast'
        - $ref: '#/components/schemas/sequential-hourly-rating-forecast'

    facility-forecast:
      type: object
      #additionalProperties: false
      properties:
        facility-type:
          $ref: '#/components/schemas/facility-types'
        facility-design-kilovoltage:
          $ref: '#/components/schemas/facility-kilovoltage'
        data-owner:
          # The transmission owner with a ratings requirement
          $ref: '#/components/schemas/entity-id'
        provenance:
          $ref: '#/components/schemas/provenance'
        facility-names:
          $ref: '#/components/schemas/facility-names'
      required:
        - facility-type
        - facility-design-kilovoltage
        - data-owner
        - provenance
        - facility-names
    coordinated-forecast:
      type: object
      additionalProperties: false
      properties:
        facility-type:
          $ref: '#/components/schemas/facility-types'
        facility-design-kilovoltage:
          $ref: '#/components/schemas/facility-kilovoltage'
        facility-names:
          $ref: '#/components/schemas/facility-names'
        sequential-hourly-forecast:
          $ref: '#/components/schemas/coordinated-sequential-hourly-forecast'
      required:
        - facility-type
        - facility-design-kilovoltage
        - facility-names
        - sequential-hourly-forecast
    sequential-hourly-rating-forecast:
      type: object
      #additionalProperties: false
      properties:
        first-hour-ends:
          $ref: '#/components/schemas/hour-ending'
        length:
          $ref: '#/components/schemas/forecast-length'
        hourly-sequence:
          type: array
          uniqueItems: true
          maxItems: 240 # MAX_HOURS
          items:
            $ref: '#/components/schemas/computed-rating'
      required:
        - first-hour-ends
        - length
        - hourly-sequence
    temperature-fahrenheit:
      type: integer
      format: int16
      maximum: 200
      minimum: -100
    coordinated-sequential-hourly-forecast:
      type: object
      additionalProperties: false
      properties:
        first-hour-ends:
          $ref: '#/components/schemas/hour-ending'
        length:
          $ref: '#/components/schemas/forecast-length'
        hourly-sequence:
          type: array
          uniqueItems: true
          maxItems: 240 # MAX_HOURS
          items:
            $ref: '#/components/schemas/coordinated-rating'
      required:
        - first-hour-ends
        - length
        - hourly-sequence

    computed-rating:
      type: object
      additionalProperties: false
      properties:
        hour-ending:
          $ref: '#/components/schemas/hour-ending'
        normal:
          $ref: '#/components/schemas/computed-apparent-power-rating'
        emergency:
          $ref: '#/components/schemas/computed-apparent-power-rating'
        load-shed:
          $ref: '#/components/schemas/computed-apparent-power-rating'
        temperature-fahrenheit:
          $ref: '#/components/schemas/temperature-fahrenheit'
      required:
        - hour-ending
        - normal
        - emergency
        - load-shed

    coordinated-rating:
      type: object
      additionalProperties: false
      properties:
        hour-ending:
          $ref: '#/components/schemas/hour-ending'
        normal:
          $ref: '#/components/schemas/coordinated-apparent-power-rating'
        emergency:
          $ref: '#/components/schemas/coordinated-apparent-power-rating'
        load-shed:
          $ref: '#/components/schemas/coordinated-apparent-power-rating'
      required:
        - hour-ending
        - normal
        - emergency
        - load-shed

    apparent-power-rating:
      type: object
      additionalProperties: false
      properties:
        mva:
          description: >
            The apparent power rating of the facility in megavolt-amperes. The ampacity of the facility should be
            determined by assuming 1 per unit of the `facility-design-kilovoltage`.
          type: integer
          format: uint16
          minimum: 1 # MIN_MVA
          maximum: 10000 # MAX_MVA
        override-reason:
          type: string
          description: >
            Presence of this field implies out-of-methodology, e.g., an operator override.
          maxLength: 100
          pattern: ^(.){0,100}$
      required:
        - mva
    computed-apparent-power-rating:
      allOf:
        - $ref: '#/components/schemas/apparent-power-rating'
        - type: object
          properties:
            limiting-element:
              $ref: '#/components/schemas/generic-identifier'
            alternate-topology-ratings:
              type: array
              uniqueItems: true
              maxItems: 10
              items:
                $ref: '#/components/schemas/alternate-topology-rating'

    coordinated-apparent-power-rating:
      allOf:
        - $ref: '#/components/schemas/apparent-power-rating'
        - type: object
          properties:
            source:
              $ref: '#/components/schemas/entity-id'
            alternate-topology-ratings:
              type: array
              uniqueItems: true
              maxItems: 10
              items:
                $ref: '#/components/schemas/alternate-topology-rating'
          required:
          - source
    alternate-topology-rating:
      allOf:
        - $ref: '#/components/schemas/apparent-power-rating'
        - type: object
          properties:
            source:
              $ref: '#/components/schemas/entity-id'
            condition-id:
              $ref: '#/components/schemas/condition-id'
      required:
        - source
        - condition-id

    

    condition-id:
      description: An identifier of the topology condition associated with this forecasted AAR.
      type: string
      maxLength: 100
      pattern: ^(.){0,100}$
    facility-types:
      type: string
      enum:
        - ACLine
        - ACTransformer
    facility-kilovoltage:
      description: The design voltage of the facility in kilovolts.
      type: integer
      format: uint16
      minimum: 1 # MIN_KV
      maximum: 2000 # MAX_KV
    facility-names:
      description: >
        The Forecast Provider **must** include the `facility-name` used in their operations and **should** provide
        any other `facility-name` they believe to be in use by other transmission owners and reliability coordinators.
      type: array
      minItems: 1
      maxItems: 10 # MAX_NAMES
      items:
        $ref: '#/components/schemas/facility-name'
    facility-name:
      type: object
      additionalProperties: false
      properties:
        name:
          description: A unique name given to the facility by `authority`
          type: string
          maxLength: 50
          pattern: '^(.){3,50}$'
        authority:
          $ref: '#/components/schemas/entity-id'
        mrid:
          $ref: '#/components/schemas/mrid'
      required:
        - name
        - authority

    modeled-object-identifier:
      description: |
        Identifier for an object included in the network model of the Transmission Provider.   
        TROLIE may be able to support multiple conventions, to handle the use of CIM MRIDs as well as
        identifiers that may be unique to certain systems, such as the Transmission Provider's EMS, 
        asset registration, or planning systems.  TROLIE will map these conventions based on use of the 
        X-TROLIE-Naming-Scheme header.  Available naming conventions for a particular TROLIE implementation
        are available from getNetworkNamingConventions.  
      type: string
      maxLength: 100
      pattern: ^(.){0,100}$

    generic-identifier:
      type: string
      maxLength: 100
      pattern: ^(.){0,100}$
    hash:
      type: string
      description: >
        A hex encoded hash value as produced by, e.g., SHA512.
      maxLength: 256
      pattern: '^[A-Fa-f0-9\-]{6,256}$'
    mrid:
      type: string
      description: >
        An optional, globally unique identifier for the facility as used by
        `authority`. In all cases, comparisons for uniqueness should be case
        invariant. The pattern is included for security purposes and does
        not attempt to validate the identifier format; it allows for, e.g.,
        RFC 4122 style identifiers that are non-conforming.
      maxLength: 50
      pattern: '^(?:(^(urn:uuid:)?[A-Fa-f0-9\-]{6,50}$)|(^\S+$))$'
    coordinated-source:
      allOf:
        - $ref: '#/components/schemas/provenance' 
        - type: object
          properties:
            received-time:
              $ref: '#/components/schemas/timestamp'
          required:
            - received-time
    provenance:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/entity-id'
        created-time:
          $ref: '#/components/schemas/timestamp'
        origin-id:
          $ref: '#/components/schemas/origin-id'
      required:
        - provider
        - created-time
        - origin-id
      additionalProperties: false

    origin-id:
      description: >
        Opaque correlation identifier assigned by the originating system.
      type: string
      maxLength: 50
      pattern: '^(.){1,50}$'
    entity-id:
      description: Usually the NERC id of the entity.
      type: string
      maxLength: 10
      pattern: ^[A-Z]{3,10}$
      example: 'MISO'

    limit-type:
      description: |
        A type of limit as defined in the Transmission Provider's operating manual, usually indicating specific scenarios 
        under which the limit may be used as well as a maximum period for which the limit may be safely applied.  The supported limit types
        an instance of TROLIE may be introspected via the getSupportedLimitTypes operation.  
      type: string
      maxLength: 20
      pattern: ^[A-Z]{3,10}$
      example: 'normal'    
    period-start: 
      description: |
        RFC 3339 date-time string with *no fractional seconds component* that designates an operating period (such as an hour) that
        starts at a specified time. This will frequently be at the start of an hour, but may be finer-grained, such as 
        every 30 minutes, should the Transmission Provider choose.
        If the Transmission Provider is operating in EST, these are
        valid and equivalent values:
        * 2023-01-01T06:00Z
        * 2023-01-01T01:00-5:00
        * 2023-01-01T00:00-6:00
        * 2023-01-01T11:30+5:30

        The server should uniformly represent date-times in the operational time zone of the Transmission Provider.
      type: string
      format: date-time
      maxLength: 25
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
      example: '2025-01-01T03:00:00-05:00'
    hour-ending:
      description: |
        RFC 3339 date-time string with *no fractional seconds component* that designates the hour that ends at the specified time. The hour must align with
        an operational hour of the Transmission Provider. Thus, if the Transmission Provider is operating in EST, these are
        valid and equivalent values:
        * 2023-01-01T06:00Z
        * 2023-01-01T01:00-5:00
        * 2023-01-01T00:00-6:00
        * 2023-01-01T11:30+5:30

        However, these would *not* be valid:
        * 2023-01-01T06:01Z
        * 2023-01-01T01:02-05:00
        * 2023-01-01T10:00+5:30
        The server should uniformly represent date-times in the operational time zone of the Transmission Provider.
      type: string
      format: date-time
      maxLength: 25
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
      example: '2025-01-01T03:00:00-05:00'
    timestamp:
      description: RFC 3339 date-time string with a maximum of 10 digits in the fractional seconds component, i.e., nanosecond precision.
      type: string
      format: date-time
      maxLength: 35
      pattern: '^([0-9]{4})-([0-9]{2})-([0-9]{2})[Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]{1,10})?([Zz]|([+-])([0-9]{2}):([0-9]{2}))$'
    forecast-length:
      type: integer
      format: uint16
      minimum: 0
      maximum: 240 # MAX_HOURS
      default: 240 # MAX_HOURS
    limit-units:
      type: string
      enum:
      - mva
      - amps
      - pfmw    
      
    empty:
      description: Intended to proactively avoid information disclosure
      type: string
      nullable: true
      maxLength: 0
      pattern: ^$

  responses:
    unauthorized-head:
      description: Unauthorized
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unauthorized:
      description: Unauthorized
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forbidden-head:
      description: Access denied
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forbidden:
      description: Access denied
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

    forecast-will-never-exist:
      description: The requested forecast does not exist and will never exist.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    forecast-not-yet-available:
      description: The forecasting window is not open for the nominated `first-hour-ends`.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    rate-limited-head:
      description: Too many requests (rate limiting)
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    rate-limited:
      description: Too many requests (rate limiting)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    archived:
      description: Gone. The requested forecast may be available in ratings archive.
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        Location:
          schema:
            description: The URL for the archived forecast
            type: string
            pattern: ^http.*
            maxLength: 2000

    not-acceptable-head:
      description: Not acceptable (content negotiation)
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    not-acceptable:
      description: Not acceptable (content negotiation)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    invalid-forecast:
      description: Unprocessable entity (invalid forecast)
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/validation-message'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unsupported-patch:
      description: >
        Unsupported media type. This can occur if an entity submits a forecast
        payload other than what is expected, e.g., if a Reliability Coordinator
        submits `application/vnd.local-rating-forecast` instead of
        `application/vnd.regional-rating-forecast`.

      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        Accept-Patch:
          description: The acceptable media types.
          schema:
            type: string
            pattern: ^application/vnd.*
            maxLength: 100
    payload-too-large:
      description: Payload too large
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unexpected-error-head:
      description: An unexpected error occurred
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    unexpected-error:
      description: An unexpected error occurred
      content:
        'application/*':
          schema:
            $ref: '#/components/schemas/empty'
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
    not-modified:
      description: Not modified
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'
        ETag:
          $ref: '#/components/headers/ETag'
    empty:
      description: An empty response
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-Rate-Limit-Reset'

  headers:
    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
    ETag:
      description: >
        An opaque, unique identifier for a specific version of a resource. The
        modeled resource state is what is versioned, not the content of any
        particular representation. The server MUST use a strong validator so that
        the same ETag is returned regardless of the media type of the representation.
      schema:
        additionalProperties: false
        anyOf:
          - $ref: '#/components/schemas/hash'
          - $ref: '#/components/schemas/origin-id'
    X-TROLIE-Naming-Scheme:
      description: |
        Indicates the naming scheme used by this operation.  The names of elements and segments
        will vary depending on their use.  CIM Master Resource Identifiers (mRIDs) may be used, as well
        as names used by the EMS or other systems.  The list of naming schemes supported, as well as the current default, 
        is a function of the TROLIE implementation.  All names of all elements are available in the getNetworkSegments and 
        getNetworkElements operations.  The list of all naming conventions and the configured default is available in the 
        getNetworkNamingConventions operation.              
      schema:
        type: string    
    X-TROLIE-Limit-Units:
      description: |
        By default, all limits and ratings are assumed to be in megavolt-amperes (MVA).  However, TROLIE implementations _may_ support 
        alternative units, for both submittal and query, under the following circumstances:

        * Current (amps) may be used if the given segment or element has a nominal voltage configured in the model.  
          Conversion from/to MVA will be done assuming this nominal voltage.  Submittals in amps for segments without 
          a nominal voltage in amps will return null, and submittals in amps will not be allowed for such segments.  
        * A combination of actual power in megawatts (MW) and an assumed power factor (PF) in MW/MVA.  The MW and PF pairs must be offered together
          in submittals.  Queries for this form will return null for ratings/limits that were not originally submitted in this form.  

        The ability to negotiate limit units in this way is an optional feature of the TROLIE implementation.  
      schema:
        $ref: '#/components/schemas/limit-units'

  securitySchemes:
    oauth2-cert-flow:
      type: oauth2
      flows:
        clientCredentials:
          #The linter errors on the authorizationUrl, incorrectly?
          #authorizationUrl: https://example.com/oauth2
          tokenUrl: https://no-server/oauth2
          scopes:
            "write:forecasts": "Update Ratings Provider ratings forecasts"
            "read:monitoring-set": "Read ratings associated with a particular monitoring set"
            "write:recourse-ratings": "Update Ratings Provider recourse ratings"
            "read:operating-snapshot": "Read the ratings and limits snapshots in-use by the clearinghouse provider"

security:
  - oauth2-cert-flow: []